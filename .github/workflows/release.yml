name: Release Packages
on:
  push:
    tags:
      - v*
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.17.0
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.0

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Test code
      run: go test -v ./...

  setup-release:
    name: Setup release
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Create a Release
      id: create_release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        title: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Get url to upload to release from output
      env:
        url: ${{ steps.create_release.outputs.upload_url }}
      run: |
        mkdir artifact
        echo $url > artifact/url.txt

    - name: Upload artifact to share url with other jobs
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: artifact/url.txt

  release-pkg:
    name: Release package
    needs: setup-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [mac64, lin64, win64]
        include:
        - os: mac64
          goos: darwin
          arch: amd64
        - os: lin64
          goos: linux
          arch: amd64
        - os: win64
          goos: windows
          arch: amd64

    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Set up Go 1.17.0
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.0

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Build
      env:
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.arch }}
      run: |
        mkdir dist
        cp README.md LICENSE dist/
        GOOS=$goos GOARCH=$goarch go build -ldflags="-w -s -X 'main.version=${{ steps.get_version.outputs.VERSION }}' -X 'main.gitcommit=${{ github.sha }}'" -trimpath -v -o dist/desqueeze ./
        zip -j -r release dist

    - name: Download artifact to get url to upload to release
      uses: actions/download-artifact@v1
      with:
        name: artifact

    - name: Get url to upload to release from artifact
      id: get_url
      run: |
        url=$(cat artifact/url.txt)
        echo "##[set-output name=upload_url;]$url"

    - name: Upload release asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_url.outputs.upload_url }}
        asset_path: release.zip
        asset_name: desqueeze-${{ matrix.os }}-${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip
